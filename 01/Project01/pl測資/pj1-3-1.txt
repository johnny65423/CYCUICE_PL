當測試「Test data 1 of 3」時，Input為>>1
; was : Proj1-3 test 3
";;;;;;;;;;;;;;;;;;;;;;;;;;;; Test 1 : Simple, no error"
v
Hello
there!
@$%--3
3.25a
a.b
-.
#t
t
#tt
nil
NIL
()
#f
#fa
exit
"Hi"
"  (1 . 2   . 3)  "
"   ( 1 2 3 . 4 5 6 . 7 . nil ) "
"What's up?"
"There is an ENTER HERE>>\nSee?!"
"Use '\"' to start and close a string."
"OurScheme allows the use of '\\n', '\\t' and  '\\\"' in a string."
"Please enter YES\NO below this line >\n" 
"You need to handle >>\\<<"      
"You also need to handle >>\"<<"
325
-325
3.25
-3.25
+3.25
325.
+325.
-325.
.375
+.3751
-.3751
-3.25
-325.
-.375
-.12499
-.12500
+.31499
+5
+-3.25
exit
";;;;;;;;;;;;;;;;;;;;;;;;;;;; Test 3 : Basic, no error"
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Basic, no error, with comment
(1 . (2 . (3 . 4)))
(1 . (2 . (3 . ())))
(1 . (2 3 4))
(1 2 3 . 4)
(1 2 3 . nil)
(1 (2 . 3) . (4))
(-1.5 .("2.25".(^&%$*+-= . nil)))    
(-1.5   
   .   
   ("2.25"   
    .  
    (^&%$*+-=   
 
     .   
     ()  

    )
   ) 
   ; some comment here   
      
  )   more comments here  
(-1.5   
   .   
   ("2.25"   
    .  ; comment all over   " 
    (^&%$*+-=   
 
     .   
     #f  

    )
   ) 
  
      ; some comment there
  )     
(10 
   
   12.())   ; same as : ( 10 12. () )
(10 ().125)   ; same as : ( 10 () .125 )
( 1 2.5
.
())

( 1 2.a . a)
(1                         2.25.5 .(t))
    
         (  
 nil#f  
 
       )  
    
         (  
 nil  
       .
    nil       )  
    
(12.5       .(4 . 5)) ; you should print 3 digits for the decimal part
( 3 . 25 )
( 3. 25 )  ; you can write a number as '3.', which means 3.0
( 3 .25 )  ; you can also write a number as '.3', which means 0.3
( 3.25 )
( abc." defg " )    ; '.' can be used as part of a symbol
(Hi there ! How are you ?)
(Hi there!"How are you?")
(Hi there) (How are you)
(Hi
           .
           (there  .(     ; note that there may be no space between
                          ; '.' and '('
           How is it going?))
           )
(-110 2.125
   -3) (4"The sun is shining on this land."
     23;"hi"

        .5 . 7.)   
  
  (   
    
    exit  
    
      )
      Hi there
<<

正確的輸出應該是>>Welcome to OurScheme!

> ";;;;;;;;;;;;;;;;;;;;;;;;;;;; Test 1 : Simple, no error"

> v

> Hello

> there!

> @$%--3

> 3.25a

> a.b

> -.

> #t

> #t

> #tt

> nil

> NIL

> nil

> nil

> #fa

> exit

> "Hi"

> "  (1 . 2   . 3)  "

> "   ( 1 2 3 . 4 5 6 . 7 . nil ) "

> "What's up?"

> "There is an ENTER HERE>>
See?!"

> "Use '"' to start and close a string."

> "OurScheme allows the use of '\n', '\t' and  '\"' in a string."

> "Please enter YES\NO below this line >
"

> "You need to handle >>\<<"

> "You also need to handle >>"<<"

> 325

> -325

> 3.250

> -3.250

> 3.250

> 325.000

> 325.000

> -325.000

> 0.375

> 0.375

> -0.375

> -3.250

> -325.000

> -0.375

> -0.125

> -0.125

> 0.315

> 5

> +-3.25

> exit

> ";;;;;;;;;;;;;;;;;;;;;;;;;;;; Test 3 : Basic, no error"

> ( 1
  2
  3
  .
  4
)

> ( 1
  2
  3
)

> ( 1
  2
  3
  4
)

> ( 1
  2
  3
  .
  4
)

> ( 1
  2
  3
)

> ( 1
  ( 2
    .
    3
  )
  4
)

> ( -1.500
  "2.25"
  ^&%$*+-=
)

> ( -1.500
  "2.25"
  ^&%$*+-=
)

> more

> comments

> here

> ( -1.500
  "2.25"
  ^&%$*+-=
)

> ( 10
  12.000
  nil
)

> ( 10
  nil
  0.125
)

> ( 1
  2.500
)

> ( 1
  2.a
  .
  a
)

> ( 1
  2.25.5
  #t
)

> ( nil#f
)

> ( nil
)

> ( 12.500
  4
  .
  5
)

> ( 3
  .
  25
)

> ( 3.000
  25
)

> ( 3
  0.250
)

> ( 3.250
)

> ( abc.
  " defg "
)

> ( Hi
  there
  !
  How
  are
  you
  ?
)

> ( Hi
  there!
  "How are you?"
)

> ( Hi
  there
)

> ( How
  are
  you
)

> ( Hi
  there
  How
  is
  it
  going?
)

> ( -110
  2.125
  -3
)

> ( 4
  "The sun is shining on this land."
  23
  0.500
  .
  7.000
)

> 
Thanks for using OurScheme!<<