1
; =============== Problem 8 可見數據 ====================
ab
(define a "=============== Problem 8 viewable case =================")
a

(clean-environment)

a
(cons (clean-environment) a)

; when the being evaluated S-expr is an atom, the result is that atom
; (in our standard print-form)

+3 -.12548 "Hi\n\"

; when a function is being evaluated, the parameters of this function
; are evaluated BEFORE this function is "applied" 
; to the evaluated results (of the parameters)

; 1. A list (or rather, a dotted pair) is CONSTRUCTED.

(cons 3 4)     ; an operation on two objects
(cons 3
        nil
  )            ; '(3 . nil)' = '(3)'
(cons 30
        ()
  )            ; same thing
(cons 30
        #f
  )            ; same thing
()
(cons () nil)(cons #f #f)(cons 'nil '())
(CONS 3 4)      ; Scheme distinquishs between upper and lower cases
(cons hello 4)
hello
(CONS hello there)
(list 1 2 3)(list)(list nil 2 3 #f)
(list 1 2 3)(cons)(list nil 2 3 #f)
(cons 1 2 3 ; Number of arguments should always be checked before
              ; the evaluation of an S-expression ;
  )           ; Once such an error is detected, no evaluation is performed ;
(cons hello there! How are you?)
(cons (clean-environment) ())
(cons (clean-environment))

