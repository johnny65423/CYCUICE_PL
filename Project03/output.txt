Welcome to OurScheme!(10727219)

> a defined

> "=============== Problem 1 viewable case ================="

> environment cleaned

> x1 defined

> x2 defined

> x3 defined

> ERROR (DEFINE format) : ( define
  ( Fcond
    x4
    x1
  )
  ( cond
    ( ( >
        x4
        x1
      )
      ( +
        x4
        x1
      )
    )
    ( ( <
        x4
        x1
      )
      ( *
        x4
        x1
      )
    )
    ( else
      ( -
        x4
        x1
      )
    )
  )
)

> ERROR (unbound symbol) : Fcond

> ERROR (unbound symbol) : Fcond

> ERROR (unbound symbol) : Fcond

> ERROR (DEFINE format) : ( define
  ( Fif
    x1
    x4
    x3
  )
  ( if
    ( >=
      x2
      x3
    )
    ( +
      x1
      x3
    )
    ( -
      x3
      x4
    )
  )
)

> ERROR (unbound symbol) : Fif

> ERROR (unbound symbol) : Fif

> ERROR (unbound symbol) : Fif

> ERROR (unbound symbol) : Fif

> ERROR (DEFINE format) : ( define
  ( Fbegin
    x3
  )
  ( begin
    ( +
      x1
      x3
    )
    ( -
      x2
      x3
    )
  )
)

> ERROR (unbound symbol) : Fbegin

> ERROR (unbound symbol) : Fbegin

> ERROR (unbound symbol) : Fbegin

> ERROR (DEFINE format) : ( define
  ( Fand
    x4
    x2
    x5
  )
  ( and
    ( >
      x4
      x2
    )
    ( >
      x2
      x5
    )
    ( >
      x5
      0
    )
  )
)

> ERROR (unbound symbol) : Fand

> ERROR (unbound symbol) : Fand

> ERROR (unbound symbol) : Fand

> ERROR (unbound symbol) : Fand

> ERROR (DEFINE format) : ( define
  ( For
    x1
    x4
    x3
  )
  ( or
    ( >
      x1
      x4
    )
    ( >
      x4
      x3
    )
    ( >
      x1
      100
    )
    ( >
      x4
      100
    )
    ( >
      x3
      100
    )
  )
)

> ERROR (unbound symbol) : For

> ERROR (unbound symbol) : For

> ERROR (unbound symbol) : For

> ERROR (unbound symbol) : For

> ERROR (unbound symbol) : For

> ERROR (unbound symbol) : For

> ERROR (unbound symbol) : lambda

> ERROR (unbound symbol) : x4

> ERROR (unbound symbol) : x4

> 3

> 4

> environment cleaned

> ERROR (DEFINE format) : ( define
  ( cadr
    x
  )
  ( car
    ( cdr
      x
    )
  )
)

> ERROR (unbound symbol) : cadr

> ERROR (unbound symbol) : cadr

> ERROR (unbound symbol) : cadr

> ERROR (unbound symbol) : cadr-clone

> ERROR (unbound symbol) : cadr-clone

> cadr-clone defined

> ( 10
  20
)

> ERROR (unbound symbol) : cadr

> ERROR (DEFINE format) : ( define
  ( cdar
    y
  )
  ( cdr
    ( car
      y
    )
  )
)

> ERROR (unbound symbol) : cdar

> first defined

> #<procedure car>

> #<procedure car>

> 10

> FFirst defined

> car

> ERROR (unbound symbol) : cadr

> ERROR (unbound symbol) : second

> ERROR (unbound symbol) : second

> ERROR (unbound symbol) : second

> ERROR (unbound symbol) : second

> ERROR (unbound symbol) : second

> 
Thanks for using OurScheme!